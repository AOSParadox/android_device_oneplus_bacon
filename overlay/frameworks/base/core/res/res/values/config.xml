<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) 2012-2015, The Linux Foundation. All rights reserved

    Not a Contribution.

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>3</item>
        <item>15</item>
        <item>50</item>
        <item>100</item>
        <item>400</item>
        <item>800</item>
        <item>1520</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>10</item>
        <item>20</item>
        <item>50</item>
        <item>100</item>
        <item>150</item>
        <item>200</item>
        <item>230</item>
        <item>255</item>
    </integer-array>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Maximum screen brightness allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">82</integer>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">10</integer>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>25</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>25</item>
        <item>8</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>25</item>
    </integer-array>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Default color for notification LED (green). -->
    <color name="config_defaultNotificationColor">#FF00FF00</color>

    <!-- Default value for led color when battery is low on charge (red) -->
    <integer name="config_notificationsBatteryLowARGB">0xFFFF0000</integer>

    <!-- Default value for led color when battery is medium charged and not full (red) -->
    <integer name="config_notificationsBatteryMediumARGB">0xFFFF0000</integer>

    <!-- Default value for led color when battery is fully charged, 100% (green) -->
    <integer name="config_notificationsBatteryFullARGB">0xFF00FF00</integer>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,4,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,60000,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"bluetooth,7,7,2,-1,true"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
            <item>"bnep\\d"</item>
            <item>"bt-pan"</item>
    </string-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
    <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>4</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- Operating volatage for bluetooth controller. 0 by default-->
    <integer translatable="false" name="config_bluetooth_operating_voltage_mv">3700</integer>

    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
    <bool name="config_bluetooth_le_peripheral_mode_supported">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
    on the headphone/microphone jack. When false use the older uevent framework -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Is the device capable of hot swapping an ICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.

         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.

         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Wifi driver supports batched scan -->
    <bool translatable="false" name="config_wifi_batched_scan_supported">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
    <item>5</item>
    <item>15</item>
    <item>50</item>
    <item>100</item>
    <item>200</item>
    <item>400</item>
    <item>1000</item>
    <item>2000</item>
    <item>3000</item>
    <item>5000</item>
    <item>10000</item>
    <item>30000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
    <item>11</item>   <!-- 0-5 -->
    <item>18</item>   <!-- 5-15 -->
    <item>27</item>   <!-- 15-50 -->
    <item>38</item>   <!-- 50-100 -->
    <item>48</item>   <!-- 100-200 -->
    <item>55</item>   <!-- 200-400 -->
    <item>64</item>   <!-- 400-1000 -->
    <item>74</item>   <!-- 1000-2000 -->
    <item>120</item>  <!-- 2000-3000 -->
    <item>164</item>  <!-- 3000-5000 -->
    <item>225</item>  <!-- 5000-10000 -->
    <item>255</item>  <!-- 10000-30000 -->
    <item>255</item>  <!-- 30000+ -->


    </integer-array>

    <!-- MMS user agent string -->
    <string name="config_mms_user_agent" translatable="false">Android-Mms/2.0</string>

    <!-- MMS user agent prolfile url -->
    <string name="config_mms_user_agent_profile_url" translatable="false"
            >http://www.google.com/oha/rdf/ua-profile-kila.xml</string>

    <!-- Configuration to restart radio upon PDP_DEACTIVATE with
         error cause as Regular deactivation(36). -->
    <!--
    <bool name="config_radio_reset_on_regular_deactivation">false</bool>
    -->
    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">true</bool>

    <!-- Whether camera shutter sound is forced or not  (country specific). -->
    <bool name="config_camera_sound_forced">false</bool>

    <string-array name="config_mobile_tcp_buffers">
        <item>"lte:2097152,4194304,8388608,262144,524288,1048576"</item>
        <item>"lte_ca:2097152,4194304,8388608,262144,524288,1048576"</item>
        <item>"umts:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hspa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsupa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsdpa:4094,87380,2441216,4096,16384,2441216"</item>
        <item>"hspap:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"edge:4093,26280,35040,4096,16384,35040"</item>
        <item>"gprs:4092,8760,11680,4096,8760,11680"</item>
        <item>"evdo:4094,87380,1048576,4096,16384,262144"</item>
        <item>"ehrpd:4094,87380,1048576,4096,16384,262144"</item>
    </string-array>

    <!-- Flag specifying whether VoLTE & VT is availasble on device -->
    <bool name="config_device_volte_available">false</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
   <!-- <bool name="config_speed_up_audio_on_mt_calls">true</bool>-->

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>
    <!--  Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>
    <!--  Define Google play service package for FRP-->
    <string name="config_persistentDataPackageName" translatable="false">com.google.android.gms</string>

    <!--  Doze Power Management -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <bool name="config_networkSamplingWakesDevice">false</bool>

    <string name="config_radio_access_family">GPRS|EDGE|UMTS|HSDPA|HSUPA|HSPA|LTE|HSPAP|GSM|TD_SCDMA|WCDMA|LTE_CA</string>

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Recent apps view in SystemUI
            2 - Launch assist intent
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHomeBehavior">2</integer>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">7</integer>


    <!-- Keycodes of gestures. If the gesture is not supported set it to 0. -->
    <integer name="config_doubleTapKeyCode">183</integer>

    <integer name="config_drawVKeyCode">61</integer>

    <integer name="config_drawInverseVKeyCode">62</integer>

    <integer name="config_drawOKeyCode">59</integer>

    <integer name="config_drawMKeyCode">88</integer>

    <integer name="config_drawWKeyCode">87</integer>

    <integer name="config_drawArrowLeftKeyCode">63</integer>

    <integer name="config_drawArrowRightKeyCode">64</integer>

    <integer name="config_oneFingerSwipeUpKeyCode">68</integer>

    <integer name="config_oneFingerSwipeRightKeyCode">65</integer>

    <integer name="config_oneFingerSwipeDownKeyCode">67</integer>

    <integer name="config_oneFingerSwipeLeftKeyCode">66</integer>

    <integer name="config_twoFingerSwipeKeyCode">60</integer>

    <!-- Default settings for gestures
            0 - Disabled
            1 - Wake device
            2 - Toggle flashlight
            3 - Toggle airplane mode
            4 - Play/Pause music
            5 - Next music
            6 - Previous music
            7 - Open camera
            8 - Open dialer -->
    <integer name="config_doubleTapDefault">1</integer>

    <integer name="config_drawVDefault">2</integer>

    <integer name="config_drawInverseVDefault">3</integer>

    <integer name="config_drawODefault">7</integer>

    <integer name="config_drawMDefault">0</integer>

    <integer name="config_drawWDefault">0</integer>

    <integer name="config_drawArrowLeftDefault">6</integer>

    <integer name="config_drawArrowRightDefault">5</integer>

    <integer name="config_oneFingerSwipeUpDefault">0</integer>

    <integer name="config_oneFingerSwipeRightDefault">0</integer>

    <integer name="config_oneFingerSwipeDownDefault">0</integer>

    <integer name="config_oneFingerSwipeLeftDefault">0</integer>

    <integer name="config_twoFingerSwipeDefault">4</integer>

    <!-- Whether to to intercept inputs on screen off. -->
    <bool name="config_enableKeyHandler">true</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- If true, the doze component is not started until after the screen has been
          turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOff">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Set this to true to enable the platform's auto-power-save modes like doze and
         app standby.  These are not enabled by default because they require a standard
         cloud-to-device messaging service for apps to interact correctly with the modes
         (such as to be able to deliver an instant message to the device even when it is
         dozing).  This should be enabled if you have such services and expect apps to
         correctly use them when installed on your device.  Otherwise, keep this disabled
         so that applications can still use their own mechanisms. -->
    <bool name="config_enableAutoPowerModes">true</bool>

</resources>
